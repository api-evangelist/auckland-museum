{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0.0",
        "title": "Auckland Museum API",
        "description": "This is technical documentation for the Auckland Museum API\n",
        "termsOfService": "http:\/\/api.aucklandmuseum.com\/terms\/"
    },
    "servers": [
        "http:\/\/api.aucklandmuseum.com\/"
    ],
    "paths": {
        "\/search\/{index}\/{operation}": {
            "get": {
                "summary": "Perform simple search queries over Auckland Museum Collections and Cenotaph data",
                "description": "Use this endpoint to perform simple search queries for finding information and subjects you may be interested in  Searches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/1.5\/search-search.html)  Use the   - `collectionsonline` index to perform searches over other all Collections data   - `cenotaph` index to perform searches over Cenotaph data ",
                "operationId": "GetSearch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "description": "search index name Possible values: * `collectionsonline` * `cenotaph` "
                    },
                    {
                        "name": "operation",
                        "in": "path",
                        "description": "One of the supported elasticsearch operations like `_search` or `_suggest`"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "One of the supported elasticsearch query parameter values for key `q`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            },
            "post": {
                "summary": "Perform complex search queries over Auckland Museum Collections and Cenotaph data",
                "description": "Searches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/1.5\/search-search.html)  Use the   - `collectionsonline` index to perform searches over other all Collections data   - `cenotaph` index to perform searches over Cenotaph data ",
                "operationId": "PostSearch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "description": "search index name Possible values: * `collectionsonline` * `cenotaph` "
                    },
                    {
                        "name": "operation",
                        "in": "path",
                        "description": "One of the supported elasticsearch operations like `_search` or `_suggest`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            }
        },
        "\/id\/{identifier}": {
            "get": {
                "summary": "Explore details about a given subject node",
                "description": "Gets information about a `subject` identified by the `identifier`.  The response format depends upon the `Accept` header.   - `text\/html` - the default response type. Returned data can be easily viewed in any modern Internet Browser   - `application\/ld+json` - the response will be in [JSON-LD](http:\/\/json-ld.org\/)   - `application\/json` - the response will be a simple JSON Object with keys (predicates) and values (objects). ",
                "operationId": "GetSubject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "The identifier path of the `subject` youre looking for "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            }
        },
        "\/id\/media\/{path}": {
            "get": {
                "summary": "Retrieve media associated with Collections and Cenotaph subjects in Auckland Museum",
                "description": "Gets `media` at a given path ",
                "operationId": "GetMedia",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "The media `identifier` "
                    },
                    {
                        "name": "rendering",
                        "in": "query",
                        "description": "The desired media `rendering`  Possible values: * `original.jpg` * `original.pdf` * `thumbnail.jpg` (fixed with 70px) * `standard.jpg` (fixed width 440px and height 440px) * `preview.jpg` (fixed height 100px) "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            }
        },
        "\/sparql": {
            "get": {
                "summary": "Auckland Museum SPARQL endpoint",
                "description": "You can execute your [SPARQL](http:\/\/www.w3.org\/TR\/rdf-sparql-query\/) queries against this endpoint.  The sparql query should be provided as the value of the request parameter `query`. Set the `Accept` header to `application\/sparql-results+xml` to get results in XML. Set it to `application\/sparql-results+json` to get results in JSON.   **Note:** This endpoints supports [JSON-P](http:\/\/json-p.org\/). In order to get a JSON-P response, set the query parameter `callback` to your preferred callback f",
                "operationId": "GetSparql",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "sparql query"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "The [JSON-P](http:\/\/json-p.org\/) callback parameter"
                    },
                    {
                        "name": "infer",
                        "in": "query",
                        "description": "Whether to get inferred results in the response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            },
            "post": {
                "summary": "Auckland Museum SPARQL endpoint",
                "description": "You can execute your [SPARQL](http:\/\/www.w3.org\/TR\/rdf-sparql-query\/) queries against this endpoint. The sparql query should be provided as the value of the request parameter `query`. Set the `Accept` header to `application\/sparql-results+xml` to get results in XML. Set it to `application\/sparql-results+json` to get results in JSON.  ",
                "operationId": "PostSparql",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "query",
                        "in": "formData",
                        "description": "sparql query"
                    },
                    {
                        "name": "infer",
                        "in": "formData",
                        "description": "Whether to get inferred results in the response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": []
    }
}